type Product {
  id: ID!
  name: String!
  sizes: [Size!]
  quantity: Int!
  categories: [Category!]
}

type CartItem {
  id: ID!
  product: Product!
  quantity: Int!
  size: Size!
}

type Cart {
  id: ID!
  items: [CartItem!]
}

type Category {
  id: ID!
  name: String!
  products: [Product!]
}

type Size {
  id: ID!
  name: String!
}

scalar Date

type OrderItem {
  id: ID!
  size: Size!
  product: Product!
  quantity: Int!
}

type Order {
  id: ID!
  createdAt: Date!
  items: [OrderItem!]
  address: String!
}

input CreateCartItemInput {
  cartId: ID!
  productId: ID!
  quantity: Int!
  sizeId: ID!
}

input CreateOrderInput {
  address: String!
  cartId: ID!
}

type User {
  id: ID!
  firstname: String!
  lastname: String!
  email: String!
  address: String!
  orders: [Order!]
}

type Query {
  cart(id: ID!): Cart!
  categories: [Category!]!
  products: [Product!]!
  product(id: ID!): Product!
  user(id: ID!): User!
  orders: [Order!]!
  order(id: ID!): Order!
  sizes: [Size!]!
  size(id: ID!): Size!
}

type Mutation {
  addCategoryToProduct(productId: ID!, categoryId: ID!): Product!
  addCartItem(input: CreateCartItemInput!): Boolean
  addSizeToProduct(productId: ID!, sizeId: ID!): Product!

  createCart: Cart!
  createCategory(name: String!): Category!
  createOrder(input: CreateOrderInput!): Order!
  createProduct(name: String!): Product!
  createSize(name: String!): Size!
}
