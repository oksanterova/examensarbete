type Product {
  id: ID!
  name: String!
  description: String!
  sizes: [Size!]!
  categories: [Category!]!
}

type CartItem {
  id: ID!
  product: Product!
  quantity: Int!
  size: Size!
}

type Cart {
  id: ID!
  items: [CartItem!]
}

type Category {
  id: ID!
  name: String!
  products: [Product!]
}

type Size {
  id: ID!
  name: String!
}

scalar Date

type OrderItem {
  id: ID!
  size: Size!
  product: Product!
  quantity: Int!
}

type Order {
  id: ID!
  createdAt: Date!
  items: [OrderItem!]
  address: String!
}

input CreateCartItemInput {
  cartId: ID!
  productId: ID!
  quantity: Int!
  sizeId: ID!
}

input CreateOrderInput {
  address: String!
  cartId: ID!
}

input ProductInput {
  name: String!
  description: String!
  sizeIds: [ID!]!
  categoryIds: [ID!]!
}

type User {
  id: ID!
  isAdmin: Boolean!
  firstname: String
  lastname: String
  email: String!
  address: String
  orders: [Order!]
}

input ProfileInput {
  firstname: String
  lastname: String
  address: String
}

type Token {
  token: String!
}

type Query {
  cart(id: ID!): Cart!
  categories: [Category!]!
  products: [Product!]!
  product(id: ID!): Product!
  user(id: ID!): User!
  orders: [Order!]!
  order(id: ID!): Order!
  sizes: [Size!]!
  size(id: ID!): Size!
  me: User!
}

type Mutation {
  createCategory(name: String!): Category!
  deleteCategory(id: ID!): Boolean!
  updateCategory(id: ID!, name: String!): Category!

  createSize(name: String!): Size!
  deleteSize(id: ID!): Boolean!
  updateSize(id: ID!, name: String!): Size!

  addCategoryToProduct(productId: ID!, categoryId: ID!): Product!
  addCartItem(input: CreateCartItemInput!): Boolean
  addSizeToProduct(productId: ID!, sizeId: ID!): Product!

  createCart: Cart!
  updateCartItem(id: ID!, quantity: Int!): CartItem!
  deleteCartItem(id: ID!): Boolean!
  createOrder(input: CreateOrderInput!): Order!

  createProduct(input: ProductInput!): Product!
  deleteProduct(id: ID!): Boolean
  updateProduct(id: ID!, input: ProductInput!): Product!

  signUp(email: String!, password: String!): Token!
  signIn(email: String!, password: String!): Token!

  updateMe(input: ProfileInput!): User!
}
